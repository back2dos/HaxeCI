version: "{build}"

environment:
  global:
    HAXELIB_ROOT: C:\projects\haxelib
init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  # Install the haxe chocolatey package (https://chocolatey.org/packages/haxe)
  - cinst haxe -version 3.2.1 -y
  - RefreshEnv
  # Setup haxelib
  - mkdir "%HAXELIB_ROOT%"
  - haxelib setup "%HAXELIB_ROOT%"
  # Install test dependencies
  - cinst phantomjs -y
  - cinst php -y
  # Download and setup a standalone flash player debugger
  - haxe flash/install.hxml
  # Install project dependencies
  # `> log.txt || type log.txt` is for muting the output unless there is an error
  - haxelib install hxcpp  > log.txt || type log.txt && cmd /C exit 1
  - haxelib install hxjava > log.txt || type log.txt && cmd /C exit 1
  - haxelib install hxcs   > log.txt || type log.txt && cmd /C exit 1
  - haxelib list

# We don't use the build section, but do both build and 
# test in `test_script:`.
# It is just because it is more similar to the TravisCI config,
# thus it would be easier to update both of them.
build: off

test_script:
  - haxe build-interp.hxml
  - haxe build-neko.hxml         && neko bin\HelloWorld.n
  - haxe build-js.hxml           && node bin\HelloWorld.js
                                 && haxe phantomjs\run.hxml bin\HelloWorld.js
  - haxe build-java.hxml         && java -jar bin\HelloWorld.jar
  - haxe build-php.hxml          && C:\tools\php\php.exe bin\index.php
  - haxe build-cs.hxml           && bin\bin\HelloWorld.exe
  - haxe build-flash.hxml -D fdb && haxe flash\run.hxml bin\HelloWorld.swf
  - haxe build-cpp.hxml          && bin\HelloWorld.exe
  - haxe build-python.hxml       && C:\Python34-x64\python.exe bin/HelloWorld.py
